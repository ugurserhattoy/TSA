name: TSA Pipeline

on:
  push:
    branches:
      - main
      - 'release/*'
      - 'feature/*'
      - 'hotfix/*'
    tags:
      - 'v*'
    paths-ignore:
      - '**.md'

  workflow_dispatch: # manual trigger

permissions:
  contents: write

jobs:
  tests:
    uses: ./.github/workflows/tests.yml
    secrets:
      SAFETY_API_KEY: ${{ secrets.SAFETY_API_KEY }}
  
  update-badges:
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')
    uses: ./.github/workflows/update-badges.yml
    needs: tests

  build:
    name: Build & Release TSA
    needs: tests
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
      
      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Build app with tsa_mac.spec (macOS)
        if: runner.os == 'macOS'
        run: pyinstaller tsa_mac.spec

      - name: Build app with tsa.spec (Linux & Windows)
        if: runner.os == 'Linux'
        run: pyinstaller tsa.spec

      - name: Install AppImage tool (Linux only)
        if: runner.os == 'Linux'
        run: |
          sudo apt update
          sudo apt install -y libfuse2
          wget https://github.com/AppImage/appimagetool/releases/download/continuous/appimagetool-aarch64.AppImage -O appimagetool
          chmod +x appimagetool

      - name: Create AppDir and populate it
        if: runner.os == 'Linux'
        run: |
          mkdir -p TSA.AppDir/usr/bin
          cp -r dist/TSA/* TSA.AppDir/usr/bin/
          chmod +x TSA.AppDir/usr/bin/TSA
          ln -sf ./usr/bin/TSA TSA.AppDir/AppRun
          cat <<EOF > TSA.AppDir/tsa.desktop
          [Desktop Entry]
          Name=TSA
          Exec=TSA
          Icon=tsa_icon
          Type=Application
          Categories=Utility;
          EOF
          cp data/tsa_icon.png TSA.AppDir/tsa_icon.png

      - name: Build Linux AppImage
        if: runner.os == 'Linux'
        run: |
          ./appimagetool TSA.AppDir dist/TSA.AppImage

      - name: Create DMG and SHA256
        if: runner.os == 'macOS'
        run: |
          brew install create-dmg
          create-dmg \
            --volname "TSA" \
            --volicon "data/tsa_icon.icns" \
            --window-pos 200 120 \
            --window-size 500 300 \
            --icon-size 100 \
            --icon "TSA.app" 100 100 \
            --app-drop-link 375 100 \
            dist/TSA.dmg \
            dist/TSA.app
          shasum -a 256 dist/TSA.dmg > dist/TSA.dmg.sha256

      - name: Create Windows archive and SHA256
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          Compress-Archive -Path dist\TSA -DestinationPath dist\TSA-Windows.zip
          CertUtil -hashfile dist/TSA/TSA.exe SHA256 > dist/TSA.exe.sha256

      - name: Create Linux archive and SHA256
        if: runner.os == 'Linux'
        run: |
          sha256sum dist/TSA.AppImage > dist/TSA.AppImage.sha256

      - name: Upload to Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/TSA.dmg
            dist/TSA.dmg.sha256
            dist/TSA-Windows.zip
            dist/TSA.exe.sha256
            dist/TSA.AppImage
            dist/TSA.AppImage.sha256
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}