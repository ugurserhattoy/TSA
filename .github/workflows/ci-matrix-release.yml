name: TSA Pipeline

on:
  push:
    branches:
      - main
      - 'release/*'
      - 'feature/*'
      - 'hotfix/*'
    tags:
      - 'v*'
    paths-ignore:
      - '**.md'
  # pull_request:
  #   branches:
  #     - main
  #   paths-ignore:
  #     - '**.md'
  workflow_dispatch: # manual trigger

permissions:
  contents: write

jobs:
  tests:
    uses: ./.github/workflows/tests.yml
    secrets:
      SAFETY_API_KEY: ${{ secrets.SAFETY_API_KEY }}
  
  update-badges:
    uses: ./.github/workflows/update-badges.yml
    needs: tests

  build:
    name: Build & Release TSA
    needs: tests
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Build app with PyInstaller
        run: pyinstaller tsa.spec

      - name: Create DMG and SHA256
        if: runner.os == 'macOS'
        run: |
          brew install create-dmg
          create-dmg \
            --volname "TSA" \
            --volicon "data/tsa_icon.icns" \
            --window-pos 200 120 \
            --window-size 500 300 \
            --icon-size 100 \
            --icon "TSA.app" 100 100 \
            --app-drop-link 375 100 \
            dist/TSA.dmg \
            dist/TSA.app
          shasum -a 256 dist/TSA.dmg > dist/TSA.dmg.sha256

      - name: Create Windows archive and SHA256
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          Compress-Archive -Path dist\TSA -DestinationPath dist\TSA-Windows.zip
          CertUtil -hashfile dist/TSA/TSA.exe SHA256 > dist/TSA.exe.sha256

      - name: Create Linux archive and SHA256
        if: runner.os == 'Linux'
        run: |
          cd dist
          zip -r TSA-Linux.zip TSA
          sha256sum TSA/TSA > TSA.sha256

      # - name: Generate checksum
      #   run: |
      #     if [ "${{ runner.os }}" == "macOS" ]; then
      #       shasum -a 256 dist/TSA.dmg > dist/TSA.dmg.sha256
      #     elif [ "${{ runner.os }}" = "Windows" ]; then
      #       CertUtil -hashfile dist/TSA/TSA.exe SHA256 > dist/TSA.exe.sha256
      #     else
      #       sha256sum dist/TSA/TSA > dist/TSA.sha256
      #     fi

      - name: Upload to Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/TSA.dmg
            dist/TSA.dmg.sha256
            dist/TSA-Windows.zip
            dist/TSA.exe.sha256
            dist/TSA-Linux.zip
            dist/TSA.sha256
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}